---
# ansible-playbook playbooks/ensure_docker.yml -i inventory/web_servers.yml
- name: Ensure Docker
  hosts: web_servers
  become: true
  vars:
    distribution: "{{ ansible_facts['distribution'] | lower }}"
    docker_distribution_url: "https://download.docker.com/linux/{{ distribution }}"
    codename: "{{ ansible_facts['lsb']['codename'] | lower }}"
  tasks:

    - name: debug vars
      ansible.builtin.debug:
        var: distribution

    - name: debug vars
      ansible.builtin.debug:
        var: docker_distribution_url

    - name: debug vars
      ansible.builtin.debug:
        var: codename

    - name: Ensure no conflicting dependencies
      ansible.builtin.apt:
        state: absent
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - docker-compose-v2
          - podman-docker
          - containerd
          - runc

    - name: Ensure docker installation dependencies
      ansible.builtin.apt:
        update_cache: true
        state: latest
        name:
          - ca-certificates
          - curl

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: "{{ docker_distribution_url }}/gpg"
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: "deb {{ docker_distribution_url }} {{ codename }} stable"
        state: present

    - name: Install docker packages
      apt:
        state: latest
        update_cache: true
        name:
          - docker-ce
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin

    - name: Start docker service
      ansible.builtin.service:
        enabled: true
        state: started
        name: docker
